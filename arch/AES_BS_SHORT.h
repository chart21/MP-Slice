/* This code was generated by Usuba.
   See https://github.com/DadaIsCrazy/usuba.
   From the file "samples/usuba/aes_bs_short.ua" (included below). */

#include <stdint.h>

/* Do NOT change the order of those define/include */
#define NO_RUNTIME
#ifndef BITS_PER_REG
#define BITS_PER_REG 64
#endif
/* including the architecture specific .h */
#include "DATATYPE.h"

/* auxiliary functions */
void SubBytes_single__ (/*inputs*/ DATATYPE U0,DATATYPE U1,DATATYPE U2,DATATYPE U3,DATATYPE U4,DATATYPE U5,DATATYPE U6,DATATYPE U7, /*outputs*/ DATATYPE* S0,DATATYPE* S1,DATATYPE* S2,DATATYPE* S3,DATATYPE* S4,DATATYPE* S5,DATATYPE* S6,DATATYPE* S7) {
  
  // Variables declaration
  DATATYPE _tmp1_;
  DATATYPE _tmp2_;
  DATATYPE _tmp3_;
  DATATYPE _tmp4_;
  DATATYPE t0;
  DATATYPE t1;
  DATATYPE t10;
  DATATYPE t11;
  DATATYPE t12;
  DATATYPE t13;
  DATATYPE t14;
  DATATYPE t15;
  DATATYPE t16;
  DATATYPE t17;
  DATATYPE t18;
  DATATYPE t19;
  DATATYPE t2;
  DATATYPE t20;
  DATATYPE t21;
  DATATYPE t22;
  DATATYPE t23;
  DATATYPE t24;
  DATATYPE t25;
  DATATYPE t26;
  DATATYPE t27;
  DATATYPE t28;
  DATATYPE t29;
  DATATYPE t3;
  DATATYPE t30;
  DATATYPE t31;
  DATATYPE t32;
  DATATYPE t33;
  DATATYPE t34;
  DATATYPE t35;
  DATATYPE t36;
  DATATYPE t37;
  DATATYPE t38;
  DATATYPE t39;
  DATATYPE t4;
  DATATYPE t40;
  DATATYPE t41;
  DATATYPE t42;
  DATATYPE t43;
  DATATYPE t44;
  DATATYPE t45;
  DATATYPE t5;
  DATATYPE t6;
  DATATYPE t7;
  DATATYPE t8;
  DATATYPE t9;
  DATATYPE tc1;
  DATATYPE tc10;
  DATATYPE tc11;
  DATATYPE tc12;
  DATATYPE tc13;
  DATATYPE tc14;
  DATATYPE tc16;
  DATATYPE tc17;
  DATATYPE tc18;
  DATATYPE tc2;
  DATATYPE tc20;
  DATATYPE tc21;
  DATATYPE tc26;
  DATATYPE tc3;
  DATATYPE tc4;
  DATATYPE tc5;
  DATATYPE tc6;
  DATATYPE tc7;
  DATATYPE tc8;
  DATATYPE tc9;
  DATATYPE y1;
  DATATYPE y10;
  DATATYPE y11;
  DATATYPE y12;
  DATATYPE y13;
  DATATYPE y14;
  DATATYPE y15;
  DATATYPE y16;
  DATATYPE y17;
  DATATYPE y18;
  DATATYPE y19;
  DATATYPE y2;
  DATATYPE y20;
  DATATYPE y21;
  DATATYPE y3;
  DATATYPE y4;
  DATATYPE y5;
  DATATYPE y6;
  DATATYPE y7;
  DATATYPE y8;
  DATATYPE y9;
  DATATYPE z0;
  DATATYPE z1;
  DATATYPE z10;
  DATATYPE z11;
  DATATYPE z12;
  DATATYPE z13;
  DATATYPE z14;
  DATATYPE z15;
  DATATYPE z16;
  DATATYPE z17;
  DATATYPE z2;
  DATATYPE z3;
  DATATYPE z4;
  DATATYPE z5;
  DATATYPE z6;
  DATATYPE z7;
  DATATYPE z8;
  DATATYPE z9;

  // Instructions (body)
  y14 = XOR(U3,U5);
  y13 = XOR(U0,U6);
  y9 = XOR(U0,U3);
  y8 = XOR(U0,U5);
  t0 = XOR(U1,U2);
  y1 = XOR(t0,U7);
  y4 = XOR(y1,U3);
  y12 = XOR(y13,y14);
  y2 = XOR(y1,U0);
  y5 = XOR(y1,U6);
  y3 = XOR(y5,y8);
  t1 = XOR(U4,y12);
  y15 = XOR(t1,U5);
  y20 = XOR(t1,U1);
  y6 = XOR(y15,U7);
  y10 = XOR(y15,t0);
  y11 = XOR(y20,y9);
  y7 = XOR(U7,y11);
  y17 = XOR(y10,y11);
  y19 = XOR(y10,y8);
  y16 = XOR(t0,y11);
  y21 = XOR(y13,y16);
  y18 = XOR(U0,y16);
  t2 = AND(y12,y15);
  t3 = AND(y3,y6);
  t4 = XOR(t3,t2);
  t5 = AND(y4,U7);
  t6 = XOR(t5,t2);
  t7 = AND(y13,y16);
  t8 = AND(y5,y1);
  t9 = XOR(t8,t7);
  t10 = AND(y2,y7);
  t11 = XOR(t10,t7);
  t12 = AND(y9,y11);
  t13 = AND(y14,y17);
  t14 = XOR(t13,t12);
  t15 = AND(y8,y10);
  t16 = XOR(t15,t12);
  t17 = XOR(t4,y20);
  t18 = XOR(t6,t16);
  t19 = XOR(t9,t14);
  t20 = XOR(t11,t16);
  t21 = XOR(t17,t14);
  t22 = XOR(t18,y19);
  t23 = XOR(t19,y21);
  t24 = XOR(t20,y18);
  t25 = XOR(t21,t22);
  t26 = AND(t21,t23);
  t27 = XOR(t24,t26);
  t28 = AND(t25,t27);
  t29 = XOR(t28,t22);
  t30 = XOR(t23,t24);
  t31 = XOR(t22,t26);
  t32 = AND(t31,t30);
  t33 = XOR(t32,t24);
  t34 = XOR(t23,t33);
  t35 = XOR(t27,t33);
  t36 = AND(t24,t35);
  t37 = XOR(t36,t34);
  t38 = XOR(t27,t36);
  t39 = AND(t29,t38);
  t40 = XOR(t25,t39);
  t41 = XOR(t40,t37);
  t42 = XOR(t29,t33);
  t43 = XOR(t29,t40);
  t44 = XOR(t33,t37);
  t45 = XOR(t42,t41);
  z0 = AND(t44,y15);
  z1 = AND(t37,y6);
  z2 = AND(t33,U7);
  z3 = AND(t43,y16);
  z4 = AND(t40,y1);
  z5 = AND(t29,y7);
  z6 = AND(t42,y11);
  z7 = AND(t45,y17);
  z8 = AND(t41,y10);
  z9 = AND(t44,y12);
  z10 = AND(t37,y3);
  z11 = AND(t33,y4);
  z12 = AND(t43,y13);
  z13 = AND(t40,y5);
  z14 = AND(t29,y2);
  z15 = AND(t42,y9);
  z16 = AND(t45,y14);
  z17 = AND(t41,y8);
  tc1 = XOR(z15,z16);
  tc2 = XOR(z10,tc1);
  tc3 = XOR(z9,tc2);
  tc4 = XOR(z0,z2);
  tc5 = XOR(z1,z0);
  tc6 = XOR(z3,z4);
  tc7 = XOR(z12,tc4);
  tc8 = XOR(z7,tc6);
  tc9 = XOR(z8,tc7);
  tc10 = XOR(tc8,tc9);
  tc11 = XOR(tc6,tc5);
  tc12 = XOR(z3,z5);
  tc13 = XOR(z13,tc1);
  tc14 = XOR(tc4,tc12);
  *S3 = XOR(tc3,tc11);
  tc16 = XOR(z6,tc8);
  tc17 = XOR(z14,tc10);
  tc18 = XOR(tc13,tc14);
  _tmp1_ = XOR(z12,tc18);
  *S7 = NOT(_tmp1_);
  tc20 = XOR(z15,tc16);
  tc21 = XOR(tc2,z11);
  *S0 = XOR(tc3,tc16);
  _tmp2_ = XOR(tc10,tc18);
  *S6 = NOT(_tmp2_);
  *S4 = XOR(tc14,*S3);
  _tmp3_ = XOR(*S3,tc16);
  *S1 = NOT(_tmp3_);
  tc26 = XOR(tc17,tc20);
  _tmp4_ = XOR(tc26,z17);
  *S2 = NOT(_tmp4_);
  *S5 = XOR(tc21,tc17);

}

void SubBytes__ (/*inputs*/ DATATYPE inputSB__[128], /*outputs*/ DATATYPE out__[128]) {
  
  // Variables declaration
  ;

  // Instructions (body)
  for (int i = 0; i <= 15; i++) {
    SubBytes_single__(inputSB__[((i * 8) + 0)],inputSB__[((i * 8) + 1)],inputSB__[((i * 8) + 2)],inputSB__[((i * 8) + 3)],inputSB__[((i * 8) + 4)],inputSB__[((i * 8) + 5)],inputSB__[((i * 8) + 6)],inputSB__[((i * 8) + 7)],&out__[((i * 8) + 0)],&out__[((i * 8) + 1)],&out__[((i * 8) + 2)],&out__[((i * 8) + 3)],&out__[((i * 8) + 4)],&out__[((i * 8) + 5)],&out__[((i * 8) + 6)],&out__[((i * 8) + 7)]);
  }

}

void ShiftRows__ (/*inputs*/ DATATYPE inputSR__[128], /*outputs*/ DATATYPE output__[128]) {
  
  // Variables declaration
  ;

  // Instructions (body)
  output__[0] = inputSR__[0];
  output__[1] = inputSR__[1];
  output__[2] = inputSR__[2];
  output__[3] = inputSR__[3];
  output__[4] = inputSR__[4];
  output__[5] = inputSR__[5];
  output__[6] = inputSR__[6];
  output__[7] = inputSR__[7];
  output__[8] = inputSR__[40];
  output__[9] = inputSR__[41];
  output__[10] = inputSR__[42];
  output__[11] = inputSR__[43];
  output__[12] = inputSR__[44];
  output__[13] = inputSR__[45];
  output__[14] = inputSR__[46];
  output__[15] = inputSR__[47];
  output__[16] = inputSR__[80];
  output__[17] = inputSR__[81];
  output__[18] = inputSR__[82];
  output__[19] = inputSR__[83];
  output__[20] = inputSR__[84];
  output__[21] = inputSR__[85];
  output__[22] = inputSR__[86];
  output__[23] = inputSR__[87];
  output__[24] = inputSR__[120];
  output__[25] = inputSR__[121];
  output__[26] = inputSR__[122];
  output__[27] = inputSR__[123];
  output__[28] = inputSR__[124];
  output__[29] = inputSR__[125];
  output__[30] = inputSR__[126];
  output__[31] = inputSR__[127];
  output__[32] = inputSR__[32];
  output__[33] = inputSR__[33];
  output__[34] = inputSR__[34];
  output__[35] = inputSR__[35];
  output__[36] = inputSR__[36];
  output__[37] = inputSR__[37];
  output__[38] = inputSR__[38];
  output__[39] = inputSR__[39];
  output__[40] = inputSR__[72];
  output__[41] = inputSR__[73];
  output__[42] = inputSR__[74];
  output__[43] = inputSR__[75];
  output__[44] = inputSR__[76];
  output__[45] = inputSR__[77];
  output__[46] = inputSR__[78];
  output__[47] = inputSR__[79];
  output__[48] = inputSR__[112];
  output__[49] = inputSR__[113];
  output__[50] = inputSR__[114];
  output__[51] = inputSR__[115];
  output__[52] = inputSR__[116];
  output__[53] = inputSR__[117];
  output__[54] = inputSR__[118];
  output__[55] = inputSR__[119];
  output__[56] = inputSR__[24];
  output__[57] = inputSR__[25];
  output__[58] = inputSR__[26];
  output__[59] = inputSR__[27];
  output__[60] = inputSR__[28];
  output__[61] = inputSR__[29];
  output__[62] = inputSR__[30];
  output__[63] = inputSR__[31];
  output__[64] = inputSR__[64];
  output__[65] = inputSR__[65];
  output__[66] = inputSR__[66];
  output__[67] = inputSR__[67];
  output__[68] = inputSR__[68];
  output__[69] = inputSR__[69];
  output__[70] = inputSR__[70];
  output__[71] = inputSR__[71];
  output__[72] = inputSR__[104];
  output__[73] = inputSR__[105];
  output__[74] = inputSR__[106];
  output__[75] = inputSR__[107];
  output__[76] = inputSR__[108];
  output__[77] = inputSR__[109];
  output__[78] = inputSR__[110];
  output__[79] = inputSR__[111];
  output__[80] = inputSR__[16];
  output__[81] = inputSR__[17];
  output__[82] = inputSR__[18];
  output__[83] = inputSR__[19];
  output__[84] = inputSR__[20];
  output__[85] = inputSR__[21];
  output__[86] = inputSR__[22];
  output__[87] = inputSR__[23];
  output__[88] = inputSR__[56];
  output__[89] = inputSR__[57];
  output__[90] = inputSR__[58];
  output__[91] = inputSR__[59];
  output__[92] = inputSR__[60];
  output__[93] = inputSR__[61];
  output__[94] = inputSR__[62];
  output__[95] = inputSR__[63];
  output__[96] = inputSR__[96];
  output__[97] = inputSR__[97];
  output__[98] = inputSR__[98];
  output__[99] = inputSR__[99];
  output__[100] = inputSR__[100];
  output__[101] = inputSR__[101];
  output__[102] = inputSR__[102];
  output__[103] = inputSR__[103];
  output__[104] = inputSR__[8];
  output__[105] = inputSR__[9];
  output__[106] = inputSR__[10];
  output__[107] = inputSR__[11];
  output__[108] = inputSR__[12];
  output__[109] = inputSR__[13];
  output__[110] = inputSR__[14];
  output__[111] = inputSR__[15];
  output__[112] = inputSR__[48];
  output__[113] = inputSR__[49];
  output__[114] = inputSR__[50];
  output__[115] = inputSR__[51];
  output__[116] = inputSR__[52];
  output__[117] = inputSR__[53];
  output__[118] = inputSR__[54];
  output__[119] = inputSR__[55];
  output__[120] = inputSR__[88];
  output__[121] = inputSR__[89];
  output__[122] = inputSR__[90];
  output__[123] = inputSR__[91];
  output__[124] = inputSR__[92];
  output__[125] = inputSR__[93];
  output__[126] = inputSR__[94];
  output__[127] = inputSR__[95];

}

void MixColumn__ (/*inputs*/ DATATYPE inp__[128], /*outputs*/ DATATYPE out__[128]) {
  
  // Variables declaration
  DATATYPE MixColumn_single___1__tmp10_[8];
  DATATYPE MixColumn_single___1__tmp12_[8];
  DATATYPE MixColumn_single___1__tmp13_[8];
  DATATYPE MixColumn_single___1__tmp14_[8];
  DATATYPE MixColumn_single___1__tmp15_[8];
  DATATYPE MixColumn_single___1__tmp17_[8];
  DATATYPE MixColumn_single___1__tmp18_[8];
  DATATYPE MixColumn_single___1__tmp19_[8];
  DATATYPE MixColumn_single___1__tmp20_[8];
  DATATYPE MixColumn_single___1__tmp21_[8];
  DATATYPE MixColumn_single___1__tmp7_[8];
  DATATYPE MixColumn_single___1__tmp8_[8];
  DATATYPE MixColumn_single___1__tmp9_[8];
  DATATYPE MixColumn_single___1_times2___1__tmp5_[8];
  DATATYPE MixColumn_single___1_times3___1__tmp6_[8];
  DATATYPE MixColumn_single___1_times3___2__tmp6_[8];
  DATATYPE MixColumn_single___1_times3___3__tmp6_[8];
  DATATYPE MixColumn_single___2__tmp10_[8];
  DATATYPE MixColumn_single___2__tmp12_[8];
  DATATYPE MixColumn_single___2__tmp13_[8];
  DATATYPE MixColumn_single___2__tmp14_[8];
  DATATYPE MixColumn_single___2__tmp15_[8];
  DATATYPE MixColumn_single___2__tmp17_[8];
  DATATYPE MixColumn_single___2__tmp18_[8];
  DATATYPE MixColumn_single___2__tmp19_[8];
  DATATYPE MixColumn_single___2__tmp20_[8];
  DATATYPE MixColumn_single___2__tmp21_[8];
  DATATYPE MixColumn_single___2__tmp7_[8];
  DATATYPE MixColumn_single___2__tmp8_[8];
  DATATYPE MixColumn_single___2__tmp9_[8];
  DATATYPE MixColumn_single___2_times3___1__tmp6_[8];
  DATATYPE MixColumn_single___2_times3___2__tmp6_[8];
  DATATYPE MixColumn_single___2_times3___3__tmp6_[8];
  DATATYPE MixColumn_single___3__tmp10_[8];
  DATATYPE MixColumn_single___3__tmp12_[8];
  DATATYPE MixColumn_single___3__tmp13_[8];
  DATATYPE MixColumn_single___3__tmp14_[8];
  DATATYPE MixColumn_single___3__tmp15_[8];
  DATATYPE MixColumn_single___3__tmp17_[8];
  DATATYPE MixColumn_single___3__tmp18_[8];
  DATATYPE MixColumn_single___3__tmp19_[8];
  DATATYPE MixColumn_single___3__tmp20_[8];
  DATATYPE MixColumn_single___3__tmp21_[8];
  DATATYPE MixColumn_single___3__tmp7_[8];
  DATATYPE MixColumn_single___3__tmp8_[8];
  DATATYPE MixColumn_single___3__tmp9_[8];
  DATATYPE MixColumn_single___3_times3___1__tmp6_[8];
  DATATYPE MixColumn_single___3_times3___2__tmp6_[8];
  DATATYPE MixColumn_single___3_times3___3__tmp6_[8];
  DATATYPE MixColumn_single___4__tmp10_[8];
  DATATYPE MixColumn_single___4__tmp12_[8];
  DATATYPE MixColumn_single___4__tmp13_[8];
  DATATYPE MixColumn_single___4__tmp14_[8];
  DATATYPE MixColumn_single___4__tmp15_[8];
  DATATYPE MixColumn_single___4__tmp17_[8];
  DATATYPE MixColumn_single___4__tmp18_[8];
  DATATYPE MixColumn_single___4__tmp19_[8];
  DATATYPE MixColumn_single___4__tmp20_[8];
  DATATYPE MixColumn_single___4__tmp21_[8];
  DATATYPE MixColumn_single___4__tmp7_[8];
  DATATYPE MixColumn_single___4__tmp8_[8];
  DATATYPE MixColumn_single___4__tmp9_[8];
  DATATYPE MixColumn_single___4_times3___1__tmp6_[8];
  DATATYPE MixColumn_single___4_times3___2__tmp6_[8];
  DATATYPE MixColumn_single___4_times3___3__tmp6_[8];

  // Instructions (body)
  MixColumn_single___1_times2___1__tmp5_[7] = SET_ALL_ONE();
  MixColumn_single___1__tmp7_[0] = XOR(inp__[1],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1__tmp7_[1] = XOR(inp__[2],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1__tmp7_[2] = XOR(inp__[3],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1__tmp7_[3] = XOR(inp__[4],inp__[0]);
  MixColumn_single___1__tmp7_[4] = XOR(inp__[5],inp__[0]);
  MixColumn_single___1__tmp7_[5] = XOR(inp__[6],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1__tmp7_[6] = XOR(inp__[7],inp__[0]);
  MixColumn_single___1__tmp7_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[0]);
  MixColumn_single___1_times3___1__tmp6_[0] = XOR(inp__[9],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1_times3___1__tmp6_[1] = XOR(inp__[10],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1_times3___1__tmp6_[2] = XOR(inp__[11],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1_times3___1__tmp6_[3] = XOR(inp__[12],inp__[8]);
  MixColumn_single___1_times3___1__tmp6_[4] = XOR(inp__[13],inp__[8]);
  MixColumn_single___1_times3___1__tmp6_[5] = XOR(inp__[14],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1_times3___1__tmp6_[6] = XOR(inp__[15],inp__[8]);
  MixColumn_single___1_times3___1__tmp6_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[8]);
  MixColumn_single___1__tmp8_[0] = XOR(MixColumn_single___1_times3___1__tmp6_[0],inp__[8]);
  MixColumn_single___1__tmp8_[1] = XOR(MixColumn_single___1_times3___1__tmp6_[1],inp__[9]);
  MixColumn_single___1__tmp8_[2] = XOR(MixColumn_single___1_times3___1__tmp6_[2],inp__[10]);
  MixColumn_single___1__tmp8_[3] = XOR(MixColumn_single___1_times3___1__tmp6_[3],inp__[11]);
  MixColumn_single___1__tmp8_[4] = XOR(MixColumn_single___1_times3___1__tmp6_[4],inp__[12]);
  MixColumn_single___1__tmp8_[5] = XOR(MixColumn_single___1_times3___1__tmp6_[5],inp__[13]);
  MixColumn_single___1__tmp8_[6] = XOR(MixColumn_single___1_times3___1__tmp6_[6],inp__[14]);
  MixColumn_single___1__tmp8_[7] = XOR(MixColumn_single___1_times3___1__tmp6_[7],inp__[15]);
  MixColumn_single___1__tmp9_[0] = XOR(MixColumn_single___1__tmp7_[0],MixColumn_single___1__tmp8_[0]);
  MixColumn_single___1__tmp9_[1] = XOR(MixColumn_single___1__tmp7_[1],MixColumn_single___1__tmp8_[1]);
  MixColumn_single___1__tmp9_[2] = XOR(MixColumn_single___1__tmp7_[2],MixColumn_single___1__tmp8_[2]);
  MixColumn_single___1__tmp9_[3] = XOR(MixColumn_single___1__tmp7_[3],MixColumn_single___1__tmp8_[3]);
  MixColumn_single___1__tmp9_[4] = XOR(MixColumn_single___1__tmp7_[4],MixColumn_single___1__tmp8_[4]);
  MixColumn_single___1__tmp9_[5] = XOR(MixColumn_single___1__tmp7_[5],MixColumn_single___1__tmp8_[5]);
  MixColumn_single___1__tmp9_[6] = XOR(MixColumn_single___1__tmp7_[6],MixColumn_single___1__tmp8_[6]);
  MixColumn_single___1__tmp9_[7] = XOR(MixColumn_single___1__tmp7_[7],MixColumn_single___1__tmp8_[7]);
  MixColumn_single___1__tmp10_[0] = XOR(MixColumn_single___1__tmp9_[0],inp__[16]);
  MixColumn_single___1__tmp10_[1] = XOR(MixColumn_single___1__tmp9_[1],inp__[17]);
  MixColumn_single___1__tmp10_[2] = XOR(MixColumn_single___1__tmp9_[2],inp__[18]);
  MixColumn_single___1__tmp10_[3] = XOR(MixColumn_single___1__tmp9_[3],inp__[19]);
  MixColumn_single___1__tmp10_[4] = XOR(MixColumn_single___1__tmp9_[4],inp__[20]);
  MixColumn_single___1__tmp10_[5] = XOR(MixColumn_single___1__tmp9_[5],inp__[21]);
  MixColumn_single___1__tmp10_[6] = XOR(MixColumn_single___1__tmp9_[6],inp__[22]);
  MixColumn_single___1__tmp10_[7] = XOR(MixColumn_single___1__tmp9_[7],inp__[23]);
  out__[0] = XOR(MixColumn_single___1__tmp10_[0],inp__[24]);
  out__[1] = XOR(MixColumn_single___1__tmp10_[1],inp__[25]);
  out__[2] = XOR(MixColumn_single___1__tmp10_[2],inp__[26]);
  out__[3] = XOR(MixColumn_single___1__tmp10_[3],inp__[27]);
  out__[4] = XOR(MixColumn_single___1__tmp10_[4],inp__[28]);
  out__[5] = XOR(MixColumn_single___1__tmp10_[5],inp__[29]);
  out__[6] = XOR(MixColumn_single___1__tmp10_[6],inp__[30]);
  out__[7] = XOR(MixColumn_single___1__tmp10_[7],inp__[31]);
  MixColumn_single___1__tmp12_[0] = XOR(inp__[0],MixColumn_single___1_times3___1__tmp6_[0]);
  MixColumn_single___1__tmp12_[1] = XOR(inp__[1],MixColumn_single___1_times3___1__tmp6_[1]);
  MixColumn_single___1__tmp12_[2] = XOR(inp__[2],MixColumn_single___1_times3___1__tmp6_[2]);
  MixColumn_single___1__tmp12_[3] = XOR(inp__[3],MixColumn_single___1_times3___1__tmp6_[3]);
  MixColumn_single___1__tmp12_[4] = XOR(inp__[4],MixColumn_single___1_times3___1__tmp6_[4]);
  MixColumn_single___1__tmp12_[5] = XOR(inp__[5],MixColumn_single___1_times3___1__tmp6_[5]);
  MixColumn_single___1__tmp12_[6] = XOR(inp__[6],MixColumn_single___1_times3___1__tmp6_[6]);
  MixColumn_single___1__tmp12_[7] = XOR(inp__[7],MixColumn_single___1_times3___1__tmp6_[7]);
  MixColumn_single___1_times3___2__tmp6_[0] = XOR(inp__[17],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1_times3___2__tmp6_[1] = XOR(inp__[18],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1_times3___2__tmp6_[2] = XOR(inp__[19],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1_times3___2__tmp6_[3] = XOR(inp__[20],inp__[16]);
  MixColumn_single___1_times3___2__tmp6_[4] = XOR(inp__[21],inp__[16]);
  MixColumn_single___1_times3___2__tmp6_[5] = XOR(inp__[22],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1_times3___2__tmp6_[6] = XOR(inp__[23],inp__[16]);
  MixColumn_single___1_times3___2__tmp6_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[16]);
  MixColumn_single___1__tmp13_[0] = XOR(MixColumn_single___1_times3___2__tmp6_[0],inp__[16]);
  MixColumn_single___1__tmp13_[1] = XOR(MixColumn_single___1_times3___2__tmp6_[1],inp__[17]);
  MixColumn_single___1__tmp13_[2] = XOR(MixColumn_single___1_times3___2__tmp6_[2],inp__[18]);
  MixColumn_single___1__tmp13_[3] = XOR(MixColumn_single___1_times3___2__tmp6_[3],inp__[19]);
  MixColumn_single___1__tmp13_[4] = XOR(MixColumn_single___1_times3___2__tmp6_[4],inp__[20]);
  MixColumn_single___1__tmp13_[5] = XOR(MixColumn_single___1_times3___2__tmp6_[5],inp__[21]);
  MixColumn_single___1__tmp13_[6] = XOR(MixColumn_single___1_times3___2__tmp6_[6],inp__[22]);
  MixColumn_single___1__tmp13_[7] = XOR(MixColumn_single___1_times3___2__tmp6_[7],inp__[23]);
  MixColumn_single___1__tmp14_[0] = XOR(MixColumn_single___1__tmp12_[0],MixColumn_single___1__tmp13_[0]);
  MixColumn_single___1__tmp14_[1] = XOR(MixColumn_single___1__tmp12_[1],MixColumn_single___1__tmp13_[1]);
  MixColumn_single___1__tmp14_[2] = XOR(MixColumn_single___1__tmp12_[2],MixColumn_single___1__tmp13_[2]);
  MixColumn_single___1__tmp14_[3] = XOR(MixColumn_single___1__tmp12_[3],MixColumn_single___1__tmp13_[3]);
  MixColumn_single___1__tmp14_[4] = XOR(MixColumn_single___1__tmp12_[4],MixColumn_single___1__tmp13_[4]);
  MixColumn_single___1__tmp14_[5] = XOR(MixColumn_single___1__tmp12_[5],MixColumn_single___1__tmp13_[5]);
  MixColumn_single___1__tmp14_[6] = XOR(MixColumn_single___1__tmp12_[6],MixColumn_single___1__tmp13_[6]);
  MixColumn_single___1__tmp14_[7] = XOR(MixColumn_single___1__tmp12_[7],MixColumn_single___1__tmp13_[7]);
  out__[8] = XOR(MixColumn_single___1__tmp14_[0],inp__[24]);
  out__[9] = XOR(MixColumn_single___1__tmp14_[1],inp__[25]);
  out__[10] = XOR(MixColumn_single___1__tmp14_[2],inp__[26]);
  out__[11] = XOR(MixColumn_single___1__tmp14_[3],inp__[27]);
  out__[12] = XOR(MixColumn_single___1__tmp14_[4],inp__[28]);
  out__[13] = XOR(MixColumn_single___1__tmp14_[5],inp__[29]);
  out__[14] = XOR(MixColumn_single___1__tmp14_[6],inp__[30]);
  out__[15] = XOR(MixColumn_single___1__tmp14_[7],inp__[31]);
  MixColumn_single___1__tmp15_[0] = XOR(inp__[0],inp__[8]);
  MixColumn_single___1__tmp15_[1] = XOR(inp__[1],inp__[9]);
  MixColumn_single___1__tmp15_[2] = XOR(inp__[2],inp__[10]);
  MixColumn_single___1__tmp15_[3] = XOR(inp__[3],inp__[11]);
  MixColumn_single___1__tmp15_[4] = XOR(inp__[4],inp__[12]);
  MixColumn_single___1__tmp15_[5] = XOR(inp__[5],inp__[13]);
  MixColumn_single___1__tmp15_[6] = XOR(inp__[6],inp__[14]);
  MixColumn_single___1__tmp15_[7] = XOR(inp__[7],inp__[15]);
  MixColumn_single___1__tmp17_[0] = XOR(MixColumn_single___1__tmp15_[0],MixColumn_single___1_times3___2__tmp6_[0]);
  MixColumn_single___1__tmp17_[1] = XOR(MixColumn_single___1__tmp15_[1],MixColumn_single___1_times3___2__tmp6_[1]);
  MixColumn_single___1__tmp17_[2] = XOR(MixColumn_single___1__tmp15_[2],MixColumn_single___1_times3___2__tmp6_[2]);
  MixColumn_single___1__tmp17_[3] = XOR(MixColumn_single___1__tmp15_[3],MixColumn_single___1_times3___2__tmp6_[3]);
  MixColumn_single___1__tmp17_[4] = XOR(MixColumn_single___1__tmp15_[4],MixColumn_single___1_times3___2__tmp6_[4]);
  MixColumn_single___1__tmp17_[5] = XOR(MixColumn_single___1__tmp15_[5],MixColumn_single___1_times3___2__tmp6_[5]);
  MixColumn_single___1__tmp17_[6] = XOR(MixColumn_single___1__tmp15_[6],MixColumn_single___1_times3___2__tmp6_[6]);
  MixColumn_single___1__tmp17_[7] = XOR(MixColumn_single___1__tmp15_[7],MixColumn_single___1_times3___2__tmp6_[7]);
  MixColumn_single___1_times3___3__tmp6_[0] = XOR(inp__[25],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1_times3___3__tmp6_[1] = XOR(inp__[26],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1_times3___3__tmp6_[2] = XOR(inp__[27],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1_times3___3__tmp6_[3] = XOR(inp__[28],inp__[24]);
  MixColumn_single___1_times3___3__tmp6_[4] = XOR(inp__[29],inp__[24]);
  MixColumn_single___1_times3___3__tmp6_[5] = XOR(inp__[30],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___1_times3___3__tmp6_[6] = XOR(inp__[31],inp__[24]);
  MixColumn_single___1_times3___3__tmp6_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[24]);
  MixColumn_single___1__tmp18_[0] = XOR(MixColumn_single___1_times3___3__tmp6_[0],inp__[24]);
  MixColumn_single___1__tmp18_[1] = XOR(MixColumn_single___1_times3___3__tmp6_[1],inp__[25]);
  MixColumn_single___1__tmp18_[2] = XOR(MixColumn_single___1_times3___3__tmp6_[2],inp__[26]);
  MixColumn_single___1__tmp18_[3] = XOR(MixColumn_single___1_times3___3__tmp6_[3],inp__[27]);
  MixColumn_single___1__tmp18_[4] = XOR(MixColumn_single___1_times3___3__tmp6_[4],inp__[28]);
  MixColumn_single___1__tmp18_[5] = XOR(MixColumn_single___1_times3___3__tmp6_[5],inp__[29]);
  MixColumn_single___1__tmp18_[6] = XOR(MixColumn_single___1_times3___3__tmp6_[6],inp__[30]);
  MixColumn_single___1__tmp18_[7] = XOR(MixColumn_single___1_times3___3__tmp6_[7],inp__[31]);
  out__[16] = XOR(MixColumn_single___1__tmp17_[0],MixColumn_single___1__tmp18_[0]);
  out__[17] = XOR(MixColumn_single___1__tmp17_[1],MixColumn_single___1__tmp18_[1]);
  out__[18] = XOR(MixColumn_single___1__tmp17_[2],MixColumn_single___1__tmp18_[2]);
  out__[19] = XOR(MixColumn_single___1__tmp17_[3],MixColumn_single___1__tmp18_[3]);
  out__[20] = XOR(MixColumn_single___1__tmp17_[4],MixColumn_single___1__tmp18_[4]);
  out__[21] = XOR(MixColumn_single___1__tmp17_[5],MixColumn_single___1__tmp18_[5]);
  out__[22] = XOR(MixColumn_single___1__tmp17_[6],MixColumn_single___1__tmp18_[6]);
  out__[23] = XOR(MixColumn_single___1__tmp17_[7],MixColumn_single___1__tmp18_[7]);
  MixColumn_single___1__tmp19_[0] = XOR(MixColumn_single___1__tmp7_[0],inp__[0]);
  MixColumn_single___1__tmp19_[1] = XOR(MixColumn_single___1__tmp7_[1],inp__[1]);
  MixColumn_single___1__tmp19_[2] = XOR(MixColumn_single___1__tmp7_[2],inp__[2]);
  MixColumn_single___1__tmp19_[3] = XOR(MixColumn_single___1__tmp7_[3],inp__[3]);
  MixColumn_single___1__tmp19_[4] = XOR(MixColumn_single___1__tmp7_[4],inp__[4]);
  MixColumn_single___1__tmp19_[5] = XOR(MixColumn_single___1__tmp7_[5],inp__[5]);
  MixColumn_single___1__tmp19_[6] = XOR(MixColumn_single___1__tmp7_[6],inp__[6]);
  MixColumn_single___1__tmp19_[7] = XOR(MixColumn_single___1__tmp7_[7],inp__[7]);
  MixColumn_single___1__tmp20_[0] = XOR(MixColumn_single___1__tmp19_[0],inp__[8]);
  MixColumn_single___1__tmp20_[1] = XOR(MixColumn_single___1__tmp19_[1],inp__[9]);
  MixColumn_single___1__tmp20_[2] = XOR(MixColumn_single___1__tmp19_[2],inp__[10]);
  MixColumn_single___1__tmp20_[3] = XOR(MixColumn_single___1__tmp19_[3],inp__[11]);
  MixColumn_single___1__tmp20_[4] = XOR(MixColumn_single___1__tmp19_[4],inp__[12]);
  MixColumn_single___1__tmp20_[5] = XOR(MixColumn_single___1__tmp19_[5],inp__[13]);
  MixColumn_single___1__tmp20_[6] = XOR(MixColumn_single___1__tmp19_[6],inp__[14]);
  MixColumn_single___1__tmp20_[7] = XOR(MixColumn_single___1__tmp19_[7],inp__[15]);
  MixColumn_single___1__tmp21_[0] = XOR(MixColumn_single___1__tmp20_[0],inp__[16]);
  MixColumn_single___1__tmp21_[1] = XOR(MixColumn_single___1__tmp20_[1],inp__[17]);
  MixColumn_single___1__tmp21_[2] = XOR(MixColumn_single___1__tmp20_[2],inp__[18]);
  MixColumn_single___1__tmp21_[3] = XOR(MixColumn_single___1__tmp20_[3],inp__[19]);
  MixColumn_single___1__tmp21_[4] = XOR(MixColumn_single___1__tmp20_[4],inp__[20]);
  MixColumn_single___1__tmp21_[5] = XOR(MixColumn_single___1__tmp20_[5],inp__[21]);
  MixColumn_single___1__tmp21_[6] = XOR(MixColumn_single___1__tmp20_[6],inp__[22]);
  MixColumn_single___1__tmp21_[7] = XOR(MixColumn_single___1__tmp20_[7],inp__[23]);
  out__[24] = XOR(MixColumn_single___1__tmp21_[0],MixColumn_single___1_times3___3__tmp6_[0]);
  out__[25] = XOR(MixColumn_single___1__tmp21_[1],MixColumn_single___1_times3___3__tmp6_[1]);
  out__[26] = XOR(MixColumn_single___1__tmp21_[2],MixColumn_single___1_times3___3__tmp6_[2]);
  out__[27] = XOR(MixColumn_single___1__tmp21_[3],MixColumn_single___1_times3___3__tmp6_[3]);
  out__[28] = XOR(MixColumn_single___1__tmp21_[4],MixColumn_single___1_times3___3__tmp6_[4]);
  out__[29] = XOR(MixColumn_single___1__tmp21_[5],MixColumn_single___1_times3___3__tmp6_[5]);
  out__[30] = XOR(MixColumn_single___1__tmp21_[6],MixColumn_single___1_times3___3__tmp6_[6]);
  out__[31] = XOR(MixColumn_single___1__tmp21_[7],MixColumn_single___1_times3___3__tmp6_[7]);
  MixColumn_single___2__tmp7_[0] = XOR(inp__[33],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2__tmp7_[1] = XOR(inp__[34],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2__tmp7_[2] = XOR(inp__[35],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2__tmp7_[3] = XOR(inp__[36],inp__[32]);
  MixColumn_single___2__tmp7_[4] = XOR(inp__[37],inp__[32]);
  MixColumn_single___2__tmp7_[5] = XOR(inp__[38],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2__tmp7_[6] = XOR(inp__[39],inp__[32]);
  MixColumn_single___2__tmp7_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[32]);
  MixColumn_single___2_times3___1__tmp6_[0] = XOR(inp__[41],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2_times3___1__tmp6_[1] = XOR(inp__[42],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2_times3___1__tmp6_[2] = XOR(inp__[43],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2_times3___1__tmp6_[3] = XOR(inp__[44],inp__[40]);
  MixColumn_single___2_times3___1__tmp6_[4] = XOR(inp__[45],inp__[40]);
  MixColumn_single___2_times3___1__tmp6_[5] = XOR(inp__[46],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2_times3___1__tmp6_[6] = XOR(inp__[47],inp__[40]);
  MixColumn_single___2_times3___1__tmp6_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[40]);
  MixColumn_single___2__tmp8_[0] = XOR(MixColumn_single___2_times3___1__tmp6_[0],inp__[40]);
  MixColumn_single___2__tmp8_[1] = XOR(MixColumn_single___2_times3___1__tmp6_[1],inp__[41]);
  MixColumn_single___2__tmp8_[2] = XOR(MixColumn_single___2_times3___1__tmp6_[2],inp__[42]);
  MixColumn_single___2__tmp8_[3] = XOR(MixColumn_single___2_times3___1__tmp6_[3],inp__[43]);
  MixColumn_single___2__tmp8_[4] = XOR(MixColumn_single___2_times3___1__tmp6_[4],inp__[44]);
  MixColumn_single___2__tmp8_[5] = XOR(MixColumn_single___2_times3___1__tmp6_[5],inp__[45]);
  MixColumn_single___2__tmp8_[6] = XOR(MixColumn_single___2_times3___1__tmp6_[6],inp__[46]);
  MixColumn_single___2__tmp8_[7] = XOR(MixColumn_single___2_times3___1__tmp6_[7],inp__[47]);
  MixColumn_single___2__tmp9_[0] = XOR(MixColumn_single___2__tmp7_[0],MixColumn_single___2__tmp8_[0]);
  MixColumn_single___2__tmp9_[1] = XOR(MixColumn_single___2__tmp7_[1],MixColumn_single___2__tmp8_[1]);
  MixColumn_single___2__tmp9_[2] = XOR(MixColumn_single___2__tmp7_[2],MixColumn_single___2__tmp8_[2]);
  MixColumn_single___2__tmp9_[3] = XOR(MixColumn_single___2__tmp7_[3],MixColumn_single___2__tmp8_[3]);
  MixColumn_single___2__tmp9_[4] = XOR(MixColumn_single___2__tmp7_[4],MixColumn_single___2__tmp8_[4]);
  MixColumn_single___2__tmp9_[5] = XOR(MixColumn_single___2__tmp7_[5],MixColumn_single___2__tmp8_[5]);
  MixColumn_single___2__tmp9_[6] = XOR(MixColumn_single___2__tmp7_[6],MixColumn_single___2__tmp8_[6]);
  MixColumn_single___2__tmp9_[7] = XOR(MixColumn_single___2__tmp7_[7],MixColumn_single___2__tmp8_[7]);
  MixColumn_single___2__tmp10_[0] = XOR(MixColumn_single___2__tmp9_[0],inp__[48]);
  MixColumn_single___2__tmp10_[1] = XOR(MixColumn_single___2__tmp9_[1],inp__[49]);
  MixColumn_single___2__tmp10_[2] = XOR(MixColumn_single___2__tmp9_[2],inp__[50]);
  MixColumn_single___2__tmp10_[3] = XOR(MixColumn_single___2__tmp9_[3],inp__[51]);
  MixColumn_single___2__tmp10_[4] = XOR(MixColumn_single___2__tmp9_[4],inp__[52]);
  MixColumn_single___2__tmp10_[5] = XOR(MixColumn_single___2__tmp9_[5],inp__[53]);
  MixColumn_single___2__tmp10_[6] = XOR(MixColumn_single___2__tmp9_[6],inp__[54]);
  MixColumn_single___2__tmp10_[7] = XOR(MixColumn_single___2__tmp9_[7],inp__[55]);
  out__[32] = XOR(MixColumn_single___2__tmp10_[0],inp__[56]);
  out__[33] = XOR(MixColumn_single___2__tmp10_[1],inp__[57]);
  out__[34] = XOR(MixColumn_single___2__tmp10_[2],inp__[58]);
  out__[35] = XOR(MixColumn_single___2__tmp10_[3],inp__[59]);
  out__[36] = XOR(MixColumn_single___2__tmp10_[4],inp__[60]);
  out__[37] = XOR(MixColumn_single___2__tmp10_[5],inp__[61]);
  out__[38] = XOR(MixColumn_single___2__tmp10_[6],inp__[62]);
  out__[39] = XOR(MixColumn_single___2__tmp10_[7],inp__[63]);
  MixColumn_single___2__tmp12_[0] = XOR(inp__[32],MixColumn_single___2_times3___1__tmp6_[0]);
  MixColumn_single___2__tmp12_[1] = XOR(inp__[33],MixColumn_single___2_times3___1__tmp6_[1]);
  MixColumn_single___2__tmp12_[2] = XOR(inp__[34],MixColumn_single___2_times3___1__tmp6_[2]);
  MixColumn_single___2__tmp12_[3] = XOR(inp__[35],MixColumn_single___2_times3___1__tmp6_[3]);
  MixColumn_single___2__tmp12_[4] = XOR(inp__[36],MixColumn_single___2_times3___1__tmp6_[4]);
  MixColumn_single___2__tmp12_[5] = XOR(inp__[37],MixColumn_single___2_times3___1__tmp6_[5]);
  MixColumn_single___2__tmp12_[6] = XOR(inp__[38],MixColumn_single___2_times3___1__tmp6_[6]);
  MixColumn_single___2__tmp12_[7] = XOR(inp__[39],MixColumn_single___2_times3___1__tmp6_[7]);
  MixColumn_single___2_times3___2__tmp6_[0] = XOR(inp__[49],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2_times3___2__tmp6_[1] = XOR(inp__[50],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2_times3___2__tmp6_[2] = XOR(inp__[51],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2_times3___2__tmp6_[3] = XOR(inp__[52],inp__[48]);
  MixColumn_single___2_times3___2__tmp6_[4] = XOR(inp__[53],inp__[48]);
  MixColumn_single___2_times3___2__tmp6_[5] = XOR(inp__[54],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2_times3___2__tmp6_[6] = XOR(inp__[55],inp__[48]);
  MixColumn_single___2_times3___2__tmp6_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[48]);
  MixColumn_single___2__tmp13_[0] = XOR(MixColumn_single___2_times3___2__tmp6_[0],inp__[48]);
  MixColumn_single___2__tmp13_[1] = XOR(MixColumn_single___2_times3___2__tmp6_[1],inp__[49]);
  MixColumn_single___2__tmp13_[2] = XOR(MixColumn_single___2_times3___2__tmp6_[2],inp__[50]);
  MixColumn_single___2__tmp13_[3] = XOR(MixColumn_single___2_times3___2__tmp6_[3],inp__[51]);
  MixColumn_single___2__tmp13_[4] = XOR(MixColumn_single___2_times3___2__tmp6_[4],inp__[52]);
  MixColumn_single___2__tmp13_[5] = XOR(MixColumn_single___2_times3___2__tmp6_[5],inp__[53]);
  MixColumn_single___2__tmp13_[6] = XOR(MixColumn_single___2_times3___2__tmp6_[6],inp__[54]);
  MixColumn_single___2__tmp13_[7] = XOR(MixColumn_single___2_times3___2__tmp6_[7],inp__[55]);
  MixColumn_single___2__tmp14_[0] = XOR(MixColumn_single___2__tmp12_[0],MixColumn_single___2__tmp13_[0]);
  MixColumn_single___2__tmp14_[1] = XOR(MixColumn_single___2__tmp12_[1],MixColumn_single___2__tmp13_[1]);
  MixColumn_single___2__tmp14_[2] = XOR(MixColumn_single___2__tmp12_[2],MixColumn_single___2__tmp13_[2]);
  MixColumn_single___2__tmp14_[3] = XOR(MixColumn_single___2__tmp12_[3],MixColumn_single___2__tmp13_[3]);
  MixColumn_single___2__tmp14_[4] = XOR(MixColumn_single___2__tmp12_[4],MixColumn_single___2__tmp13_[4]);
  MixColumn_single___2__tmp14_[5] = XOR(MixColumn_single___2__tmp12_[5],MixColumn_single___2__tmp13_[5]);
  MixColumn_single___2__tmp14_[6] = XOR(MixColumn_single___2__tmp12_[6],MixColumn_single___2__tmp13_[6]);
  MixColumn_single___2__tmp14_[7] = XOR(MixColumn_single___2__tmp12_[7],MixColumn_single___2__tmp13_[7]);
  out__[40] = XOR(MixColumn_single___2__tmp14_[0],inp__[56]);
  out__[41] = XOR(MixColumn_single___2__tmp14_[1],inp__[57]);
  out__[42] = XOR(MixColumn_single___2__tmp14_[2],inp__[58]);
  out__[43] = XOR(MixColumn_single___2__tmp14_[3],inp__[59]);
  out__[44] = XOR(MixColumn_single___2__tmp14_[4],inp__[60]);
  out__[45] = XOR(MixColumn_single___2__tmp14_[5],inp__[61]);
  out__[46] = XOR(MixColumn_single___2__tmp14_[6],inp__[62]);
  out__[47] = XOR(MixColumn_single___2__tmp14_[7],inp__[63]);
  MixColumn_single___2__tmp15_[0] = XOR(inp__[32],inp__[40]);
  MixColumn_single___2__tmp15_[1] = XOR(inp__[33],inp__[41]);
  MixColumn_single___2__tmp15_[2] = XOR(inp__[34],inp__[42]);
  MixColumn_single___2__tmp15_[3] = XOR(inp__[35],inp__[43]);
  MixColumn_single___2__tmp15_[4] = XOR(inp__[36],inp__[44]);
  MixColumn_single___2__tmp15_[5] = XOR(inp__[37],inp__[45]);
  MixColumn_single___2__tmp15_[6] = XOR(inp__[38],inp__[46]);
  MixColumn_single___2__tmp15_[7] = XOR(inp__[39],inp__[47]);
  MixColumn_single___2__tmp17_[0] = XOR(MixColumn_single___2__tmp15_[0],MixColumn_single___2_times3___2__tmp6_[0]);
  MixColumn_single___2__tmp17_[1] = XOR(MixColumn_single___2__tmp15_[1],MixColumn_single___2_times3___2__tmp6_[1]);
  MixColumn_single___2__tmp17_[2] = XOR(MixColumn_single___2__tmp15_[2],MixColumn_single___2_times3___2__tmp6_[2]);
  MixColumn_single___2__tmp17_[3] = XOR(MixColumn_single___2__tmp15_[3],MixColumn_single___2_times3___2__tmp6_[3]);
  MixColumn_single___2__tmp17_[4] = XOR(MixColumn_single___2__tmp15_[4],MixColumn_single___2_times3___2__tmp6_[4]);
  MixColumn_single___2__tmp17_[5] = XOR(MixColumn_single___2__tmp15_[5],MixColumn_single___2_times3___2__tmp6_[5]);
  MixColumn_single___2__tmp17_[6] = XOR(MixColumn_single___2__tmp15_[6],MixColumn_single___2_times3___2__tmp6_[6]);
  MixColumn_single___2__tmp17_[7] = XOR(MixColumn_single___2__tmp15_[7],MixColumn_single___2_times3___2__tmp6_[7]);
  MixColumn_single___2_times3___3__tmp6_[0] = XOR(inp__[57],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2_times3___3__tmp6_[1] = XOR(inp__[58],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2_times3___3__tmp6_[2] = XOR(inp__[59],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2_times3___3__tmp6_[3] = XOR(inp__[60],inp__[56]);
  MixColumn_single___2_times3___3__tmp6_[4] = XOR(inp__[61],inp__[56]);
  MixColumn_single___2_times3___3__tmp6_[5] = XOR(inp__[62],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___2_times3___3__tmp6_[6] = XOR(inp__[63],inp__[56]);
  MixColumn_single___2_times3___3__tmp6_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[56]);
  MixColumn_single___2__tmp18_[0] = XOR(MixColumn_single___2_times3___3__tmp6_[0],inp__[56]);
  MixColumn_single___2__tmp18_[1] = XOR(MixColumn_single___2_times3___3__tmp6_[1],inp__[57]);
  MixColumn_single___2__tmp18_[2] = XOR(MixColumn_single___2_times3___3__tmp6_[2],inp__[58]);
  MixColumn_single___2__tmp18_[3] = XOR(MixColumn_single___2_times3___3__tmp6_[3],inp__[59]);
  MixColumn_single___2__tmp18_[4] = XOR(MixColumn_single___2_times3___3__tmp6_[4],inp__[60]);
  MixColumn_single___2__tmp18_[5] = XOR(MixColumn_single___2_times3___3__tmp6_[5],inp__[61]);
  MixColumn_single___2__tmp18_[6] = XOR(MixColumn_single___2_times3___3__tmp6_[6],inp__[62]);
  MixColumn_single___2__tmp18_[7] = XOR(MixColumn_single___2_times3___3__tmp6_[7],inp__[63]);
  out__[48] = XOR(MixColumn_single___2__tmp17_[0],MixColumn_single___2__tmp18_[0]);
  out__[49] = XOR(MixColumn_single___2__tmp17_[1],MixColumn_single___2__tmp18_[1]);
  out__[50] = XOR(MixColumn_single___2__tmp17_[2],MixColumn_single___2__tmp18_[2]);
  out__[51] = XOR(MixColumn_single___2__tmp17_[3],MixColumn_single___2__tmp18_[3]);
  out__[52] = XOR(MixColumn_single___2__tmp17_[4],MixColumn_single___2__tmp18_[4]);
  out__[53] = XOR(MixColumn_single___2__tmp17_[5],MixColumn_single___2__tmp18_[5]);
  out__[54] = XOR(MixColumn_single___2__tmp17_[6],MixColumn_single___2__tmp18_[6]);
  out__[55] = XOR(MixColumn_single___2__tmp17_[7],MixColumn_single___2__tmp18_[7]);
  MixColumn_single___2__tmp19_[0] = XOR(MixColumn_single___2__tmp7_[0],inp__[32]);
  MixColumn_single___2__tmp19_[1] = XOR(MixColumn_single___2__tmp7_[1],inp__[33]);
  MixColumn_single___2__tmp19_[2] = XOR(MixColumn_single___2__tmp7_[2],inp__[34]);
  MixColumn_single___2__tmp19_[3] = XOR(MixColumn_single___2__tmp7_[3],inp__[35]);
  MixColumn_single___2__tmp19_[4] = XOR(MixColumn_single___2__tmp7_[4],inp__[36]);
  MixColumn_single___2__tmp19_[5] = XOR(MixColumn_single___2__tmp7_[5],inp__[37]);
  MixColumn_single___2__tmp19_[6] = XOR(MixColumn_single___2__tmp7_[6],inp__[38]);
  MixColumn_single___2__tmp19_[7] = XOR(MixColumn_single___2__tmp7_[7],inp__[39]);
  MixColumn_single___2__tmp20_[0] = XOR(MixColumn_single___2__tmp19_[0],inp__[40]);
  MixColumn_single___2__tmp20_[1] = XOR(MixColumn_single___2__tmp19_[1],inp__[41]);
  MixColumn_single___2__tmp20_[2] = XOR(MixColumn_single___2__tmp19_[2],inp__[42]);
  MixColumn_single___2__tmp20_[3] = XOR(MixColumn_single___2__tmp19_[3],inp__[43]);
  MixColumn_single___2__tmp20_[4] = XOR(MixColumn_single___2__tmp19_[4],inp__[44]);
  MixColumn_single___2__tmp20_[5] = XOR(MixColumn_single___2__tmp19_[5],inp__[45]);
  MixColumn_single___2__tmp20_[6] = XOR(MixColumn_single___2__tmp19_[6],inp__[46]);
  MixColumn_single___2__tmp20_[7] = XOR(MixColumn_single___2__tmp19_[7],inp__[47]);
  MixColumn_single___2__tmp21_[0] = XOR(MixColumn_single___2__tmp20_[0],inp__[48]);
  MixColumn_single___2__tmp21_[1] = XOR(MixColumn_single___2__tmp20_[1],inp__[49]);
  MixColumn_single___2__tmp21_[2] = XOR(MixColumn_single___2__tmp20_[2],inp__[50]);
  MixColumn_single___2__tmp21_[3] = XOR(MixColumn_single___2__tmp20_[3],inp__[51]);
  MixColumn_single___2__tmp21_[4] = XOR(MixColumn_single___2__tmp20_[4],inp__[52]);
  MixColumn_single___2__tmp21_[5] = XOR(MixColumn_single___2__tmp20_[5],inp__[53]);
  MixColumn_single___2__tmp21_[6] = XOR(MixColumn_single___2__tmp20_[6],inp__[54]);
  MixColumn_single___2__tmp21_[7] = XOR(MixColumn_single___2__tmp20_[7],inp__[55]);
  out__[56] = XOR(MixColumn_single___2__tmp21_[0],MixColumn_single___2_times3___3__tmp6_[0]);
  out__[57] = XOR(MixColumn_single___2__tmp21_[1],MixColumn_single___2_times3___3__tmp6_[1]);
  out__[58] = XOR(MixColumn_single___2__tmp21_[2],MixColumn_single___2_times3___3__tmp6_[2]);
  out__[59] = XOR(MixColumn_single___2__tmp21_[3],MixColumn_single___2_times3___3__tmp6_[3]);
  out__[60] = XOR(MixColumn_single___2__tmp21_[4],MixColumn_single___2_times3___3__tmp6_[4]);
  out__[61] = XOR(MixColumn_single___2__tmp21_[5],MixColumn_single___2_times3___3__tmp6_[5]);
  out__[62] = XOR(MixColumn_single___2__tmp21_[6],MixColumn_single___2_times3___3__tmp6_[6]);
  out__[63] = XOR(MixColumn_single___2__tmp21_[7],MixColumn_single___2_times3___3__tmp6_[7]);
  MixColumn_single___3__tmp7_[0] = XOR(inp__[65],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3__tmp7_[1] = XOR(inp__[66],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3__tmp7_[2] = XOR(inp__[67],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3__tmp7_[3] = XOR(inp__[68],inp__[64]);
  MixColumn_single___3__tmp7_[4] = XOR(inp__[69],inp__[64]);
  MixColumn_single___3__tmp7_[5] = XOR(inp__[70],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3__tmp7_[6] = XOR(inp__[71],inp__[64]);
  MixColumn_single___3__tmp7_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[64]);
  MixColumn_single___3_times3___1__tmp6_[0] = XOR(inp__[73],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3_times3___1__tmp6_[1] = XOR(inp__[74],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3_times3___1__tmp6_[2] = XOR(inp__[75],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3_times3___1__tmp6_[3] = XOR(inp__[76],inp__[72]);
  MixColumn_single___3_times3___1__tmp6_[4] = XOR(inp__[77],inp__[72]);
  MixColumn_single___3_times3___1__tmp6_[5] = XOR(inp__[78],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3_times3___1__tmp6_[6] = XOR(inp__[79],inp__[72]);
  MixColumn_single___3_times3___1__tmp6_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[72]);
  MixColumn_single___3__tmp8_[0] = XOR(MixColumn_single___3_times3___1__tmp6_[0],inp__[72]);
  MixColumn_single___3__tmp8_[1] = XOR(MixColumn_single___3_times3___1__tmp6_[1],inp__[73]);
  MixColumn_single___3__tmp8_[2] = XOR(MixColumn_single___3_times3___1__tmp6_[2],inp__[74]);
  MixColumn_single___3__tmp8_[3] = XOR(MixColumn_single___3_times3___1__tmp6_[3],inp__[75]);
  MixColumn_single___3__tmp8_[4] = XOR(MixColumn_single___3_times3___1__tmp6_[4],inp__[76]);
  MixColumn_single___3__tmp8_[5] = XOR(MixColumn_single___3_times3___1__tmp6_[5],inp__[77]);
  MixColumn_single___3__tmp8_[6] = XOR(MixColumn_single___3_times3___1__tmp6_[6],inp__[78]);
  MixColumn_single___3__tmp8_[7] = XOR(MixColumn_single___3_times3___1__tmp6_[7],inp__[79]);
  MixColumn_single___3__tmp9_[0] = XOR(MixColumn_single___3__tmp7_[0],MixColumn_single___3__tmp8_[0]);
  MixColumn_single___3__tmp9_[1] = XOR(MixColumn_single___3__tmp7_[1],MixColumn_single___3__tmp8_[1]);
  MixColumn_single___3__tmp9_[2] = XOR(MixColumn_single___3__tmp7_[2],MixColumn_single___3__tmp8_[2]);
  MixColumn_single___3__tmp9_[3] = XOR(MixColumn_single___3__tmp7_[3],MixColumn_single___3__tmp8_[3]);
  MixColumn_single___3__tmp9_[4] = XOR(MixColumn_single___3__tmp7_[4],MixColumn_single___3__tmp8_[4]);
  MixColumn_single___3__tmp9_[5] = XOR(MixColumn_single___3__tmp7_[5],MixColumn_single___3__tmp8_[5]);
  MixColumn_single___3__tmp9_[6] = XOR(MixColumn_single___3__tmp7_[6],MixColumn_single___3__tmp8_[6]);
  MixColumn_single___3__tmp9_[7] = XOR(MixColumn_single___3__tmp7_[7],MixColumn_single___3__tmp8_[7]);
  MixColumn_single___3__tmp10_[0] = XOR(MixColumn_single___3__tmp9_[0],inp__[80]);
  MixColumn_single___3__tmp10_[1] = XOR(MixColumn_single___3__tmp9_[1],inp__[81]);
  MixColumn_single___3__tmp10_[2] = XOR(MixColumn_single___3__tmp9_[2],inp__[82]);
  MixColumn_single___3__tmp10_[3] = XOR(MixColumn_single___3__tmp9_[3],inp__[83]);
  MixColumn_single___3__tmp10_[4] = XOR(MixColumn_single___3__tmp9_[4],inp__[84]);
  MixColumn_single___3__tmp10_[5] = XOR(MixColumn_single___3__tmp9_[5],inp__[85]);
  MixColumn_single___3__tmp10_[6] = XOR(MixColumn_single___3__tmp9_[6],inp__[86]);
  MixColumn_single___3__tmp10_[7] = XOR(MixColumn_single___3__tmp9_[7],inp__[87]);
  out__[64] = XOR(MixColumn_single___3__tmp10_[0],inp__[88]);
  out__[65] = XOR(MixColumn_single___3__tmp10_[1],inp__[89]);
  out__[66] = XOR(MixColumn_single___3__tmp10_[2],inp__[90]);
  out__[67] = XOR(MixColumn_single___3__tmp10_[3],inp__[91]);
  out__[68] = XOR(MixColumn_single___3__tmp10_[4],inp__[92]);
  out__[69] = XOR(MixColumn_single___3__tmp10_[5],inp__[93]);
  out__[70] = XOR(MixColumn_single___3__tmp10_[6],inp__[94]);
  out__[71] = XOR(MixColumn_single___3__tmp10_[7],inp__[95]);
  MixColumn_single___3__tmp12_[0] = XOR(inp__[64],MixColumn_single___3_times3___1__tmp6_[0]);
  MixColumn_single___3__tmp12_[1] = XOR(inp__[65],MixColumn_single___3_times3___1__tmp6_[1]);
  MixColumn_single___3__tmp12_[2] = XOR(inp__[66],MixColumn_single___3_times3___1__tmp6_[2]);
  MixColumn_single___3__tmp12_[3] = XOR(inp__[67],MixColumn_single___3_times3___1__tmp6_[3]);
  MixColumn_single___3__tmp12_[4] = XOR(inp__[68],MixColumn_single___3_times3___1__tmp6_[4]);
  MixColumn_single___3__tmp12_[5] = XOR(inp__[69],MixColumn_single___3_times3___1__tmp6_[5]);
  MixColumn_single___3__tmp12_[6] = XOR(inp__[70],MixColumn_single___3_times3___1__tmp6_[6]);
  MixColumn_single___3__tmp12_[7] = XOR(inp__[71],MixColumn_single___3_times3___1__tmp6_[7]);
  MixColumn_single___3_times3___2__tmp6_[0] = XOR(inp__[81],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3_times3___2__tmp6_[1] = XOR(inp__[82],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3_times3___2__tmp6_[2] = XOR(inp__[83],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3_times3___2__tmp6_[3] = XOR(inp__[84],inp__[80]);
  MixColumn_single___3_times3___2__tmp6_[4] = XOR(inp__[85],inp__[80]);
  MixColumn_single___3_times3___2__tmp6_[5] = XOR(inp__[86],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3_times3___2__tmp6_[6] = XOR(inp__[87],inp__[80]);
  MixColumn_single___3_times3___2__tmp6_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[80]);
  MixColumn_single___3__tmp13_[0] = XOR(MixColumn_single___3_times3___2__tmp6_[0],inp__[80]);
  MixColumn_single___3__tmp13_[1] = XOR(MixColumn_single___3_times3___2__tmp6_[1],inp__[81]);
  MixColumn_single___3__tmp13_[2] = XOR(MixColumn_single___3_times3___2__tmp6_[2],inp__[82]);
  MixColumn_single___3__tmp13_[3] = XOR(MixColumn_single___3_times3___2__tmp6_[3],inp__[83]);
  MixColumn_single___3__tmp13_[4] = XOR(MixColumn_single___3_times3___2__tmp6_[4],inp__[84]);
  MixColumn_single___3__tmp13_[5] = XOR(MixColumn_single___3_times3___2__tmp6_[5],inp__[85]);
  MixColumn_single___3__tmp13_[6] = XOR(MixColumn_single___3_times3___2__tmp6_[6],inp__[86]);
  MixColumn_single___3__tmp13_[7] = XOR(MixColumn_single___3_times3___2__tmp6_[7],inp__[87]);
  MixColumn_single___3__tmp14_[0] = XOR(MixColumn_single___3__tmp12_[0],MixColumn_single___3__tmp13_[0]);
  MixColumn_single___3__tmp14_[1] = XOR(MixColumn_single___3__tmp12_[1],MixColumn_single___3__tmp13_[1]);
  MixColumn_single___3__tmp14_[2] = XOR(MixColumn_single___3__tmp12_[2],MixColumn_single___3__tmp13_[2]);
  MixColumn_single___3__tmp14_[3] = XOR(MixColumn_single___3__tmp12_[3],MixColumn_single___3__tmp13_[3]);
  MixColumn_single___3__tmp14_[4] = XOR(MixColumn_single___3__tmp12_[4],MixColumn_single___3__tmp13_[4]);
  MixColumn_single___3__tmp14_[5] = XOR(MixColumn_single___3__tmp12_[5],MixColumn_single___3__tmp13_[5]);
  MixColumn_single___3__tmp14_[6] = XOR(MixColumn_single___3__tmp12_[6],MixColumn_single___3__tmp13_[6]);
  MixColumn_single___3__tmp14_[7] = XOR(MixColumn_single___3__tmp12_[7],MixColumn_single___3__tmp13_[7]);
  out__[72] = XOR(MixColumn_single___3__tmp14_[0],inp__[88]);
  out__[73] = XOR(MixColumn_single___3__tmp14_[1],inp__[89]);
  out__[74] = XOR(MixColumn_single___3__tmp14_[2],inp__[90]);
  out__[75] = XOR(MixColumn_single___3__tmp14_[3],inp__[91]);
  out__[76] = XOR(MixColumn_single___3__tmp14_[4],inp__[92]);
  out__[77] = XOR(MixColumn_single___3__tmp14_[5],inp__[93]);
  out__[78] = XOR(MixColumn_single___3__tmp14_[6],inp__[94]);
  out__[79] = XOR(MixColumn_single___3__tmp14_[7],inp__[95]);
  MixColumn_single___3__tmp15_[0] = XOR(inp__[64],inp__[72]);
  MixColumn_single___3__tmp15_[1] = XOR(inp__[65],inp__[73]);
  MixColumn_single___3__tmp15_[2] = XOR(inp__[66],inp__[74]);
  MixColumn_single___3__tmp15_[3] = XOR(inp__[67],inp__[75]);
  MixColumn_single___3__tmp15_[4] = XOR(inp__[68],inp__[76]);
  MixColumn_single___3__tmp15_[5] = XOR(inp__[69],inp__[77]);
  MixColumn_single___3__tmp15_[6] = XOR(inp__[70],inp__[78]);
  MixColumn_single___3__tmp15_[7] = XOR(inp__[71],inp__[79]);
  MixColumn_single___3__tmp17_[0] = XOR(MixColumn_single___3__tmp15_[0],MixColumn_single___3_times3___2__tmp6_[0]);
  MixColumn_single___3__tmp17_[1] = XOR(MixColumn_single___3__tmp15_[1],MixColumn_single___3_times3___2__tmp6_[1]);
  MixColumn_single___3__tmp17_[2] = XOR(MixColumn_single___3__tmp15_[2],MixColumn_single___3_times3___2__tmp6_[2]);
  MixColumn_single___3__tmp17_[3] = XOR(MixColumn_single___3__tmp15_[3],MixColumn_single___3_times3___2__tmp6_[3]);
  MixColumn_single___3__tmp17_[4] = XOR(MixColumn_single___3__tmp15_[4],MixColumn_single___3_times3___2__tmp6_[4]);
  MixColumn_single___3__tmp17_[5] = XOR(MixColumn_single___3__tmp15_[5],MixColumn_single___3_times3___2__tmp6_[5]);
  MixColumn_single___3__tmp17_[6] = XOR(MixColumn_single___3__tmp15_[6],MixColumn_single___3_times3___2__tmp6_[6]);
  MixColumn_single___3__tmp17_[7] = XOR(MixColumn_single___3__tmp15_[7],MixColumn_single___3_times3___2__tmp6_[7]);
  MixColumn_single___3_times3___3__tmp6_[0] = XOR(inp__[89],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3_times3___3__tmp6_[1] = XOR(inp__[90],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3_times3___3__tmp6_[2] = XOR(inp__[91],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3_times3___3__tmp6_[3] = XOR(inp__[92],inp__[88]);
  MixColumn_single___3_times3___3__tmp6_[4] = XOR(inp__[93],inp__[88]);
  MixColumn_single___3_times3___3__tmp6_[5] = XOR(inp__[94],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___3_times3___3__tmp6_[6] = XOR(inp__[95],inp__[88]);
  MixColumn_single___3_times3___3__tmp6_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[88]);
  MixColumn_single___3__tmp18_[0] = XOR(MixColumn_single___3_times3___3__tmp6_[0],inp__[88]);
  MixColumn_single___3__tmp18_[1] = XOR(MixColumn_single___3_times3___3__tmp6_[1],inp__[89]);
  MixColumn_single___3__tmp18_[2] = XOR(MixColumn_single___3_times3___3__tmp6_[2],inp__[90]);
  MixColumn_single___3__tmp18_[3] = XOR(MixColumn_single___3_times3___3__tmp6_[3],inp__[91]);
  MixColumn_single___3__tmp18_[4] = XOR(MixColumn_single___3_times3___3__tmp6_[4],inp__[92]);
  MixColumn_single___3__tmp18_[5] = XOR(MixColumn_single___3_times3___3__tmp6_[5],inp__[93]);
  MixColumn_single___3__tmp18_[6] = XOR(MixColumn_single___3_times3___3__tmp6_[6],inp__[94]);
  MixColumn_single___3__tmp18_[7] = XOR(MixColumn_single___3_times3___3__tmp6_[7],inp__[95]);
  out__[80] = XOR(MixColumn_single___3__tmp17_[0],MixColumn_single___3__tmp18_[0]);
  out__[81] = XOR(MixColumn_single___3__tmp17_[1],MixColumn_single___3__tmp18_[1]);
  out__[82] = XOR(MixColumn_single___3__tmp17_[2],MixColumn_single___3__tmp18_[2]);
  out__[83] = XOR(MixColumn_single___3__tmp17_[3],MixColumn_single___3__tmp18_[3]);
  out__[84] = XOR(MixColumn_single___3__tmp17_[4],MixColumn_single___3__tmp18_[4]);
  out__[85] = XOR(MixColumn_single___3__tmp17_[5],MixColumn_single___3__tmp18_[5]);
  out__[86] = XOR(MixColumn_single___3__tmp17_[6],MixColumn_single___3__tmp18_[6]);
  out__[87] = XOR(MixColumn_single___3__tmp17_[7],MixColumn_single___3__tmp18_[7]);
  MixColumn_single___3__tmp19_[0] = XOR(MixColumn_single___3__tmp7_[0],inp__[64]);
  MixColumn_single___3__tmp19_[1] = XOR(MixColumn_single___3__tmp7_[1],inp__[65]);
  MixColumn_single___3__tmp19_[2] = XOR(MixColumn_single___3__tmp7_[2],inp__[66]);
  MixColumn_single___3__tmp19_[3] = XOR(MixColumn_single___3__tmp7_[3],inp__[67]);
  MixColumn_single___3__tmp19_[4] = XOR(MixColumn_single___3__tmp7_[4],inp__[68]);
  MixColumn_single___3__tmp19_[5] = XOR(MixColumn_single___3__tmp7_[5],inp__[69]);
  MixColumn_single___3__tmp19_[6] = XOR(MixColumn_single___3__tmp7_[6],inp__[70]);
  MixColumn_single___3__tmp19_[7] = XOR(MixColumn_single___3__tmp7_[7],inp__[71]);
  MixColumn_single___3__tmp20_[0] = XOR(MixColumn_single___3__tmp19_[0],inp__[72]);
  MixColumn_single___3__tmp20_[1] = XOR(MixColumn_single___3__tmp19_[1],inp__[73]);
  MixColumn_single___3__tmp20_[2] = XOR(MixColumn_single___3__tmp19_[2],inp__[74]);
  MixColumn_single___3__tmp20_[3] = XOR(MixColumn_single___3__tmp19_[3],inp__[75]);
  MixColumn_single___3__tmp20_[4] = XOR(MixColumn_single___3__tmp19_[4],inp__[76]);
  MixColumn_single___3__tmp20_[5] = XOR(MixColumn_single___3__tmp19_[5],inp__[77]);
  MixColumn_single___3__tmp20_[6] = XOR(MixColumn_single___3__tmp19_[6],inp__[78]);
  MixColumn_single___3__tmp20_[7] = XOR(MixColumn_single___3__tmp19_[7],inp__[79]);
  MixColumn_single___3__tmp21_[0] = XOR(MixColumn_single___3__tmp20_[0],inp__[80]);
  MixColumn_single___3__tmp21_[1] = XOR(MixColumn_single___3__tmp20_[1],inp__[81]);
  MixColumn_single___3__tmp21_[2] = XOR(MixColumn_single___3__tmp20_[2],inp__[82]);
  MixColumn_single___3__tmp21_[3] = XOR(MixColumn_single___3__tmp20_[3],inp__[83]);
  MixColumn_single___3__tmp21_[4] = XOR(MixColumn_single___3__tmp20_[4],inp__[84]);
  MixColumn_single___3__tmp21_[5] = XOR(MixColumn_single___3__tmp20_[5],inp__[85]);
  MixColumn_single___3__tmp21_[6] = XOR(MixColumn_single___3__tmp20_[6],inp__[86]);
  MixColumn_single___3__tmp21_[7] = XOR(MixColumn_single___3__tmp20_[7],inp__[87]);
  out__[88] = XOR(MixColumn_single___3__tmp21_[0],MixColumn_single___3_times3___3__tmp6_[0]);
  out__[89] = XOR(MixColumn_single___3__tmp21_[1],MixColumn_single___3_times3___3__tmp6_[1]);
  out__[90] = XOR(MixColumn_single___3__tmp21_[2],MixColumn_single___3_times3___3__tmp6_[2]);
  out__[91] = XOR(MixColumn_single___3__tmp21_[3],MixColumn_single___3_times3___3__tmp6_[3]);
  out__[92] = XOR(MixColumn_single___3__tmp21_[4],MixColumn_single___3_times3___3__tmp6_[4]);
  out__[93] = XOR(MixColumn_single___3__tmp21_[5],MixColumn_single___3_times3___3__tmp6_[5]);
  out__[94] = XOR(MixColumn_single___3__tmp21_[6],MixColumn_single___3_times3___3__tmp6_[6]);
  out__[95] = XOR(MixColumn_single___3__tmp21_[7],MixColumn_single___3_times3___3__tmp6_[7]);
  MixColumn_single___4__tmp7_[0] = XOR(inp__[97],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4__tmp7_[1] = XOR(inp__[98],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4__tmp7_[2] = XOR(inp__[99],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4__tmp7_[3] = XOR(inp__[100],inp__[96]);
  MixColumn_single___4__tmp7_[4] = XOR(inp__[101],inp__[96]);
  MixColumn_single___4__tmp7_[5] = XOR(inp__[102],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4__tmp7_[6] = XOR(inp__[103],inp__[96]);
  MixColumn_single___4__tmp7_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[96]);
  MixColumn_single___4_times3___1__tmp6_[0] = XOR(inp__[105],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4_times3___1__tmp6_[1] = XOR(inp__[106],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4_times3___1__tmp6_[2] = XOR(inp__[107],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4_times3___1__tmp6_[3] = XOR(inp__[108],inp__[104]);
  MixColumn_single___4_times3___1__tmp6_[4] = XOR(inp__[109],inp__[104]);
  MixColumn_single___4_times3___1__tmp6_[5] = XOR(inp__[110],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4_times3___1__tmp6_[6] = XOR(inp__[111],inp__[104]);
  MixColumn_single___4_times3___1__tmp6_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[104]);
  MixColumn_single___4__tmp8_[0] = XOR(MixColumn_single___4_times3___1__tmp6_[0],inp__[104]);
  MixColumn_single___4__tmp8_[1] = XOR(MixColumn_single___4_times3___1__tmp6_[1],inp__[105]);
  MixColumn_single___4__tmp8_[2] = XOR(MixColumn_single___4_times3___1__tmp6_[2],inp__[106]);
  MixColumn_single___4__tmp8_[3] = XOR(MixColumn_single___4_times3___1__tmp6_[3],inp__[107]);
  MixColumn_single___4__tmp8_[4] = XOR(MixColumn_single___4_times3___1__tmp6_[4],inp__[108]);
  MixColumn_single___4__tmp8_[5] = XOR(MixColumn_single___4_times3___1__tmp6_[5],inp__[109]);
  MixColumn_single___4__tmp8_[6] = XOR(MixColumn_single___4_times3___1__tmp6_[6],inp__[110]);
  MixColumn_single___4__tmp8_[7] = XOR(MixColumn_single___4_times3___1__tmp6_[7],inp__[111]);
  MixColumn_single___4__tmp9_[0] = XOR(MixColumn_single___4__tmp7_[0],MixColumn_single___4__tmp8_[0]);
  MixColumn_single___4__tmp9_[1] = XOR(MixColumn_single___4__tmp7_[1],MixColumn_single___4__tmp8_[1]);
  MixColumn_single___4__tmp9_[2] = XOR(MixColumn_single___4__tmp7_[2],MixColumn_single___4__tmp8_[2]);
  MixColumn_single___4__tmp9_[3] = XOR(MixColumn_single___4__tmp7_[3],MixColumn_single___4__tmp8_[3]);
  MixColumn_single___4__tmp9_[4] = XOR(MixColumn_single___4__tmp7_[4],MixColumn_single___4__tmp8_[4]);
  MixColumn_single___4__tmp9_[5] = XOR(MixColumn_single___4__tmp7_[5],MixColumn_single___4__tmp8_[5]);
  MixColumn_single___4__tmp9_[6] = XOR(MixColumn_single___4__tmp7_[6],MixColumn_single___4__tmp8_[6]);
  MixColumn_single___4__tmp9_[7] = XOR(MixColumn_single___4__tmp7_[7],MixColumn_single___4__tmp8_[7]);
  MixColumn_single___4__tmp10_[0] = XOR(MixColumn_single___4__tmp9_[0],inp__[112]);
  MixColumn_single___4__tmp10_[1] = XOR(MixColumn_single___4__tmp9_[1],inp__[113]);
  MixColumn_single___4__tmp10_[2] = XOR(MixColumn_single___4__tmp9_[2],inp__[114]);
  MixColumn_single___4__tmp10_[3] = XOR(MixColumn_single___4__tmp9_[3],inp__[115]);
  MixColumn_single___4__tmp10_[4] = XOR(MixColumn_single___4__tmp9_[4],inp__[116]);
  MixColumn_single___4__tmp10_[5] = XOR(MixColumn_single___4__tmp9_[5],inp__[117]);
  MixColumn_single___4__tmp10_[6] = XOR(MixColumn_single___4__tmp9_[6],inp__[118]);
  MixColumn_single___4__tmp10_[7] = XOR(MixColumn_single___4__tmp9_[7],inp__[119]);
  out__[96] = XOR(MixColumn_single___4__tmp10_[0],inp__[120]);
  out__[97] = XOR(MixColumn_single___4__tmp10_[1],inp__[121]);
  out__[98] = XOR(MixColumn_single___4__tmp10_[2],inp__[122]);
  out__[99] = XOR(MixColumn_single___4__tmp10_[3],inp__[123]);
  out__[100] = XOR(MixColumn_single___4__tmp10_[4],inp__[124]);
  out__[101] = XOR(MixColumn_single___4__tmp10_[5],inp__[125]);
  out__[102] = XOR(MixColumn_single___4__tmp10_[6],inp__[126]);
  out__[103] = XOR(MixColumn_single___4__tmp10_[7],inp__[127]);
  MixColumn_single___4__tmp12_[0] = XOR(inp__[96],MixColumn_single___4_times3___1__tmp6_[0]);
  MixColumn_single___4__tmp12_[1] = XOR(inp__[97],MixColumn_single___4_times3___1__tmp6_[1]);
  MixColumn_single___4__tmp12_[2] = XOR(inp__[98],MixColumn_single___4_times3___1__tmp6_[2]);
  MixColumn_single___4__tmp12_[3] = XOR(inp__[99],MixColumn_single___4_times3___1__tmp6_[3]);
  MixColumn_single___4__tmp12_[4] = XOR(inp__[100],MixColumn_single___4_times3___1__tmp6_[4]);
  MixColumn_single___4__tmp12_[5] = XOR(inp__[101],MixColumn_single___4_times3___1__tmp6_[5]);
  MixColumn_single___4__tmp12_[6] = XOR(inp__[102],MixColumn_single___4_times3___1__tmp6_[6]);
  MixColumn_single___4__tmp12_[7] = XOR(inp__[103],MixColumn_single___4_times3___1__tmp6_[7]);
  MixColumn_single___4_times3___2__tmp6_[0] = XOR(inp__[113],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4_times3___2__tmp6_[1] = XOR(inp__[114],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4_times3___2__tmp6_[2] = XOR(inp__[115],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4_times3___2__tmp6_[3] = XOR(inp__[116],inp__[112]);
  MixColumn_single___4_times3___2__tmp6_[4] = XOR(inp__[117],inp__[112]);
  MixColumn_single___4_times3___2__tmp6_[5] = XOR(inp__[118],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4_times3___2__tmp6_[6] = XOR(inp__[119],inp__[112]);
  MixColumn_single___4_times3___2__tmp6_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[112]);
  MixColumn_single___4__tmp13_[0] = XOR(MixColumn_single___4_times3___2__tmp6_[0],inp__[112]);
  MixColumn_single___4__tmp13_[1] = XOR(MixColumn_single___4_times3___2__tmp6_[1],inp__[113]);
  MixColumn_single___4__tmp13_[2] = XOR(MixColumn_single___4_times3___2__tmp6_[2],inp__[114]);
  MixColumn_single___4__tmp13_[3] = XOR(MixColumn_single___4_times3___2__tmp6_[3],inp__[115]);
  MixColumn_single___4__tmp13_[4] = XOR(MixColumn_single___4_times3___2__tmp6_[4],inp__[116]);
  MixColumn_single___4__tmp13_[5] = XOR(MixColumn_single___4_times3___2__tmp6_[5],inp__[117]);
  MixColumn_single___4__tmp13_[6] = XOR(MixColumn_single___4_times3___2__tmp6_[6],inp__[118]);
  MixColumn_single___4__tmp13_[7] = XOR(MixColumn_single___4_times3___2__tmp6_[7],inp__[119]);
  MixColumn_single___4__tmp14_[0] = XOR(MixColumn_single___4__tmp12_[0],MixColumn_single___4__tmp13_[0]);
  MixColumn_single___4__tmp14_[1] = XOR(MixColumn_single___4__tmp12_[1],MixColumn_single___4__tmp13_[1]);
  MixColumn_single___4__tmp14_[2] = XOR(MixColumn_single___4__tmp12_[2],MixColumn_single___4__tmp13_[2]);
  MixColumn_single___4__tmp14_[3] = XOR(MixColumn_single___4__tmp12_[3],MixColumn_single___4__tmp13_[3]);
  MixColumn_single___4__tmp14_[4] = XOR(MixColumn_single___4__tmp12_[4],MixColumn_single___4__tmp13_[4]);
  MixColumn_single___4__tmp14_[5] = XOR(MixColumn_single___4__tmp12_[5],MixColumn_single___4__tmp13_[5]);
  MixColumn_single___4__tmp14_[6] = XOR(MixColumn_single___4__tmp12_[6],MixColumn_single___4__tmp13_[6]);
  MixColumn_single___4__tmp14_[7] = XOR(MixColumn_single___4__tmp12_[7],MixColumn_single___4__tmp13_[7]);
  out__[104] = XOR(MixColumn_single___4__tmp14_[0],inp__[120]);
  out__[105] = XOR(MixColumn_single___4__tmp14_[1],inp__[121]);
  out__[106] = XOR(MixColumn_single___4__tmp14_[2],inp__[122]);
  out__[107] = XOR(MixColumn_single___4__tmp14_[3],inp__[123]);
  out__[108] = XOR(MixColumn_single___4__tmp14_[4],inp__[124]);
  out__[109] = XOR(MixColumn_single___4__tmp14_[5],inp__[125]);
  out__[110] = XOR(MixColumn_single___4__tmp14_[6],inp__[126]);
  out__[111] = XOR(MixColumn_single___4__tmp14_[7],inp__[127]);
  MixColumn_single___4__tmp15_[0] = XOR(inp__[96],inp__[104]);
  MixColumn_single___4__tmp15_[1] = XOR(inp__[97],inp__[105]);
  MixColumn_single___4__tmp15_[2] = XOR(inp__[98],inp__[106]);
  MixColumn_single___4__tmp15_[3] = XOR(inp__[99],inp__[107]);
  MixColumn_single___4__tmp15_[4] = XOR(inp__[100],inp__[108]);
  MixColumn_single___4__tmp15_[5] = XOR(inp__[101],inp__[109]);
  MixColumn_single___4__tmp15_[6] = XOR(inp__[102],inp__[110]);
  MixColumn_single___4__tmp15_[7] = XOR(inp__[103],inp__[111]);
  MixColumn_single___4__tmp17_[0] = XOR(MixColumn_single___4__tmp15_[0],MixColumn_single___4_times3___2__tmp6_[0]);
  MixColumn_single___4__tmp17_[1] = XOR(MixColumn_single___4__tmp15_[1],MixColumn_single___4_times3___2__tmp6_[1]);
  MixColumn_single___4__tmp17_[2] = XOR(MixColumn_single___4__tmp15_[2],MixColumn_single___4_times3___2__tmp6_[2]);
  MixColumn_single___4__tmp17_[3] = XOR(MixColumn_single___4__tmp15_[3],MixColumn_single___4_times3___2__tmp6_[3]);
  MixColumn_single___4__tmp17_[4] = XOR(MixColumn_single___4__tmp15_[4],MixColumn_single___4_times3___2__tmp6_[4]);
  MixColumn_single___4__tmp17_[5] = XOR(MixColumn_single___4__tmp15_[5],MixColumn_single___4_times3___2__tmp6_[5]);
  MixColumn_single___4__tmp17_[6] = XOR(MixColumn_single___4__tmp15_[6],MixColumn_single___4_times3___2__tmp6_[6]);
  MixColumn_single___4__tmp17_[7] = XOR(MixColumn_single___4__tmp15_[7],MixColumn_single___4_times3___2__tmp6_[7]);
  MixColumn_single___4_times3___3__tmp6_[0] = XOR(inp__[121],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4_times3___3__tmp6_[1] = XOR(inp__[122],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4_times3___3__tmp6_[2] = XOR(inp__[123],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4_times3___3__tmp6_[3] = XOR(inp__[124],inp__[120]);
  MixColumn_single___4_times3___3__tmp6_[4] = XOR(inp__[125],inp__[120]);
  MixColumn_single___4_times3___3__tmp6_[5] = XOR(inp__[126],MixColumn_single___1_times2___1__tmp5_[7]);
  MixColumn_single___4_times3___3__tmp6_[6] = XOR(inp__[127],inp__[120]);
  MixColumn_single___4_times3___3__tmp6_[7] = XOR(MixColumn_single___1_times2___1__tmp5_[7],inp__[120]);
  MixColumn_single___4__tmp18_[0] = XOR(MixColumn_single___4_times3___3__tmp6_[0],inp__[120]);
  MixColumn_single___4__tmp18_[1] = XOR(MixColumn_single___4_times3___3__tmp6_[1],inp__[121]);
  MixColumn_single___4__tmp18_[2] = XOR(MixColumn_single___4_times3___3__tmp6_[2],inp__[122]);
  MixColumn_single___4__tmp18_[3] = XOR(MixColumn_single___4_times3___3__tmp6_[3],inp__[123]);
  MixColumn_single___4__tmp18_[4] = XOR(MixColumn_single___4_times3___3__tmp6_[4],inp__[124]);
  MixColumn_single___4__tmp18_[5] = XOR(MixColumn_single___4_times3___3__tmp6_[5],inp__[125]);
  MixColumn_single___4__tmp18_[6] = XOR(MixColumn_single___4_times3___3__tmp6_[6],inp__[126]);
  MixColumn_single___4__tmp18_[7] = XOR(MixColumn_single___4_times3___3__tmp6_[7],inp__[127]);
  out__[112] = XOR(MixColumn_single___4__tmp17_[0],MixColumn_single___4__tmp18_[0]);
  out__[113] = XOR(MixColumn_single___4__tmp17_[1],MixColumn_single___4__tmp18_[1]);
  out__[114] = XOR(MixColumn_single___4__tmp17_[2],MixColumn_single___4__tmp18_[2]);
  out__[115] = XOR(MixColumn_single___4__tmp17_[3],MixColumn_single___4__tmp18_[3]);
  out__[116] = XOR(MixColumn_single___4__tmp17_[4],MixColumn_single___4__tmp18_[4]);
  out__[117] = XOR(MixColumn_single___4__tmp17_[5],MixColumn_single___4__tmp18_[5]);
  out__[118] = XOR(MixColumn_single___4__tmp17_[6],MixColumn_single___4__tmp18_[6]);
  out__[119] = XOR(MixColumn_single___4__tmp17_[7],MixColumn_single___4__tmp18_[7]);
  MixColumn_single___4__tmp19_[0] = XOR(MixColumn_single___4__tmp7_[0],inp__[96]);
  MixColumn_single___4__tmp19_[1] = XOR(MixColumn_single___4__tmp7_[1],inp__[97]);
  MixColumn_single___4__tmp19_[2] = XOR(MixColumn_single___4__tmp7_[2],inp__[98]);
  MixColumn_single___4__tmp19_[3] = XOR(MixColumn_single___4__tmp7_[3],inp__[99]);
  MixColumn_single___4__tmp19_[4] = XOR(MixColumn_single___4__tmp7_[4],inp__[100]);
  MixColumn_single___4__tmp19_[5] = XOR(MixColumn_single___4__tmp7_[5],inp__[101]);
  MixColumn_single___4__tmp19_[6] = XOR(MixColumn_single___4__tmp7_[6],inp__[102]);
  MixColumn_single___4__tmp19_[7] = XOR(MixColumn_single___4__tmp7_[7],inp__[103]);
  MixColumn_single___4__tmp20_[0] = XOR(MixColumn_single___4__tmp19_[0],inp__[104]);
  MixColumn_single___4__tmp20_[1] = XOR(MixColumn_single___4__tmp19_[1],inp__[105]);
  MixColumn_single___4__tmp20_[2] = XOR(MixColumn_single___4__tmp19_[2],inp__[106]);
  MixColumn_single___4__tmp20_[3] = XOR(MixColumn_single___4__tmp19_[3],inp__[107]);
  MixColumn_single___4__tmp20_[4] = XOR(MixColumn_single___4__tmp19_[4],inp__[108]);
  MixColumn_single___4__tmp20_[5] = XOR(MixColumn_single___4__tmp19_[5],inp__[109]);
  MixColumn_single___4__tmp20_[6] = XOR(MixColumn_single___4__tmp19_[6],inp__[110]);
  MixColumn_single___4__tmp20_[7] = XOR(MixColumn_single___4__tmp19_[7],inp__[111]);
  MixColumn_single___4__tmp21_[0] = XOR(MixColumn_single___4__tmp20_[0],inp__[112]);
  MixColumn_single___4__tmp21_[1] = XOR(MixColumn_single___4__tmp20_[1],inp__[113]);
  MixColumn_single___4__tmp21_[2] = XOR(MixColumn_single___4__tmp20_[2],inp__[114]);
  MixColumn_single___4__tmp21_[3] = XOR(MixColumn_single___4__tmp20_[3],inp__[115]);
  MixColumn_single___4__tmp21_[4] = XOR(MixColumn_single___4__tmp20_[4],inp__[116]);
  MixColumn_single___4__tmp21_[5] = XOR(MixColumn_single___4__tmp20_[5],inp__[117]);
  MixColumn_single___4__tmp21_[6] = XOR(MixColumn_single___4__tmp20_[6],inp__[118]);
  MixColumn_single___4__tmp21_[7] = XOR(MixColumn_single___4__tmp20_[7],inp__[119]);
  out__[120] = XOR(MixColumn_single___4__tmp21_[0],MixColumn_single___4_times3___3__tmp6_[0]);
  out__[121] = XOR(MixColumn_single___4__tmp21_[1],MixColumn_single___4_times3___3__tmp6_[1]);
  out__[122] = XOR(MixColumn_single___4__tmp21_[2],MixColumn_single___4_times3___3__tmp6_[2]);
  out__[123] = XOR(MixColumn_single___4__tmp21_[3],MixColumn_single___4_times3___3__tmp6_[3]);
  out__[124] = XOR(MixColumn_single___4__tmp21_[4],MixColumn_single___4_times3___3__tmp6_[4]);
  out__[125] = XOR(MixColumn_single___4__tmp21_[5],MixColumn_single___4_times3___3__tmp6_[5]);
  out__[126] = XOR(MixColumn_single___4__tmp21_[6],MixColumn_single___4_times3___3__tmp6_[6]);
  out__[127] = XOR(MixColumn_single___4__tmp21_[7],MixColumn_single___4_times3___3__tmp6_[7]);

}

void AddRoundKey__ (/*inputs*/ DATATYPE a__[128],DATATYPE b__[128], /*outputs*/ DATATYPE c__[128]) {
  
  // Variables declaration
  ;

  // Instructions (body)
  for (int i = 0; i <= 127; i++) {
    c__[i] = XOR(a__[i],b__[i]);
  }

}

/* main function */
void AES__ (/*inputs*/ DATATYPE plain__[128],DATATYPE key__[11][128], /*outputs*/ DATATYPE cipher__[128]) {
  
  // Variables declaration
  DATATYPE _tmp23_[128];
  DATATYPE _tmp24_[128];
  DATATYPE _tmp25_[128];
  DATATYPE _tmp26_[128];
  DATATYPE _tmp27_[128];
  DATATYPE tmp__[128];

  // Instructions (body)
  AddRoundKey__(plain__,key__[0],tmp__);
  for (int i = 1; i <= 9; i++) {
    SubBytes__(tmp__,_tmp23_);
    ShiftRows__(_tmp23_,_tmp24_);
    MixColumn__(_tmp24_,_tmp25_);
    AddRoundKey__(_tmp25_,key__[i],tmp__);
  }
  SubBytes__(tmp__,_tmp26_);
  ShiftRows__(_tmp26_,_tmp27_);
  AddRoundKey__(_tmp27_,key__[10],cipher__);

}


/* **************************************************************** */
/*                            Usuba source                          */
/*                                                                  */
/*

_no_inline table SubBytes_single(input :  u1x8 :: base)
  returns output :  u1x8 :: base
{
  99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22
}


_no_inline node SubBytes(inputSB :  u1x8[16] :: base)
  returns out :  u1x8[16] :: base
vars

let
  _no_unroll forall i in [0,15] {
    (out[i]) = SubBytes_single(inputSB[i])
  }
tel

_no_inline node ShiftRows(inputSR :  u1x8[16] :: base)
  returns output :  bool[128] :: base
vars

let
  (output) = inputSR[0,5,10,15,4,9,14,3,8,13,2,7,12,1,6,11]
tel

 node times2(i :  bool[8] :: base)
  returns o :  bool[8] :: base
vars

let
  (o) = ((i << 1) ^ (0,0,0,i[0],i[0],0,i[0],i[0]))
tel

 node times3(i :  bool[8] :: base)
  returns o :  bool[8] :: base
vars

let
  (o) = (times2(i) ^ i)
tel

 node MixColumn_single(inp :  u1x8[4] :: base)
  returns out :  u1x8[4] :: base
vars

let
  (out[0]) = (((times2(inp[0]) ^ times3(inp[1])) ^ inp[2]) ^ inp[3]);
  (out[1]) = (((inp[0] ^ times2(inp[1])) ^ times3(inp[2])) ^ inp[3]);
  (out[2]) = (((inp[0] ^ inp[1]) ^ times2(inp[2])) ^ times3(inp[3]));
  (out[3]) = (((times3(inp[0]) ^ inp[1]) ^ inp[2]) ^ times2(inp[3]))
tel

_no_inline node MixColumn(inp :  u1x32[4] :: base)
  returns out :  u1x32[4] :: base
vars

let
  _no_unroll forall i in [0,3] {
    (out[i]) = MixColumn_single(inp[i])
  }
tel

_no_inline node AddRoundKey(a :  u1x1[128] :: base,b :  u1x1[128] :: base)
  returns c :  u1x1[128] :: base
vars

let
  _no_unroll forall i in [0,127] {
    (c[i]) = (a[i] ^ b[i])
  }
tel

 node AES(plain :  u1x128 :: base,key :  u1x128[11] :: base)
  returns cipher :  bool[128] :: base
vars
  tmp :  u1x128[10] :: base
let
  (tmp[0]) = AddRoundKey(plain,key[0]);
   forall i in [1,9] {
    (tmp[i]) = AddRoundKey(MixColumn(ShiftRows(SubBytes(tmp[(i - 1)]))),key[i])
  };
  (cipher) = AddRoundKey(ShiftRows(SubBytes(tmp[9])),key[10])
tel

*/
 
